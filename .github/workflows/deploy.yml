name: Deploy to EC2

on:
  push:
    branches:
      - main # Change this to your deployment branch if different

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14' # Ensure this matches the version on your EC2

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2-key.pem
          chmod 400 ec2-key.pem
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > known_hosts
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          scp -i ec2-key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=known_hosts -r * ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/pearlthoughts
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=known_hosts ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd /home/ubuntu/pearlthoughts && npm install && npm run build && pm2 restart all"
